@import "../../variables";


.accountCreateSuccess {
    color: #21B54D;
}

.accountCreateFailed {
    color: red;
}

.pageContainer {

    // Contain page content 

    @media screen and (min-width: 768px){  // width >= 768
        padding: 30px 10vw 0 5vw; // Follow NavBar
    }
    @media not screen and (min-width: 768px){  // width < 768
        margin: 30px auto 0px auto;
        padding: 10px;
    }

    display: flex;
    flex-direction: column;

    max-width: 1400px;

    h2 {
        margin-bottom: 20px;
        font-family: SarabunRegular;
        font-weight: normal;
    }

    h3 {
        margin-bottom: 20px;
        font-family: SarabunRegular;
        font-weight: normal;
    }
    
}

.container {

    margin:  30px auto 0px auto;

    display: flex;
    flex-direction: column;

    max-width: 1200px;
    

    h2 {
        margin-bottom: 20px;
    }

    h3 {
        font-family: SarabunRegular;
        font-size: 18px;
        font-style: normal;
        font-weight: normal;
        line-height: 23px;
        margin-bottom: 10px;
    }
    
}

@mixin conditionalFlexing {

    // Ensure the component isn't squeezed before wrapping

    @media screen and (min-width: 768px){
        flex-direction: row;
    }
    @media screen and (max-width: 767px){
        flex-direction: column;
    }
}

@mixin conditionalWidth {

    // Fix component size when screen is large otherwise 100%

    @media screen and (min-width: 768px){
        width: 450px;
    }
    @media screen and (max-width: 767px){
        width: 100%;
    }
}

@mixin conditionalPadding {

    // Different padding when there are 2 columns

    @media screen and (min-width: 769px){  // width >= 768
        padding: 0px 85px;
    }
    @media not screen and (min-width: 769px){  // width < 768
        padding: 15px;
    }
}

.flexWrapper{
    @include conditionalFlexing();

    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
}


@mixin InputDisabled {

    // grey out disabled input field

    input:disabled{
        border-radius: 5px;
        border-color:  #E9E9E9;
        background-color: #E9E9E9;
    }

}

.loginCredentials {
    @include conditionalWidth;

    flex: 1;

    padding: 30px 35px;
    border: 1px solid #009473;
    border-radius: 5px;

    @include InputDisabled

}
.loginCredentialsNoneDisplay {
    @include conditionalWidth;

    flex: 0;

    padding: 30px 35px;
    // border: 1px solid #009473;
    border-radius: 5px;

    @include InputDisabled

}

.userInfo {
    @include conditionalPadding();
    
    flex: 2;

    // Override default behavior
    
    div { // Reason: Does not align with button
        margin: 0;
    }

    @include InputDisabled;
}

.greenButton{
    margin-top: 20px;
    width: 123px;
height: 36px;
    color:white;

    border: none;
    background: #009473;
box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
border-radius: 4px;
}