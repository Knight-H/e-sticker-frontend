@import "../../variables";


.section1 {
    width: 90%;
    margin: 30px auto;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    // border: 3px solid red;

    overflow-x: scroll;
}

.section2 {
    width: 90%;
    margin: 30px auto;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    // border: 3px solid red;

    // overflow-x: scroll;
}

.formControl {
    // margin-top: 10px;
    // border: 3px solid red;

    width: 100%;

    p {
        margin: 0px;
        padding-bottom: 5px;
    }

    input {
        border: 1px solid #009473;
        border-radius: 5px;
        height: 30px;
        width: 100%;
        padding: 0px 0px 0px 5px;

        margin-bottom: 5px;
    }
}


.pageContainer {

    // Contain page content 

    @media screen and (min-width: 768px){  // width >= 768
        padding: 30px 10vw 0 5vw; // Follow NavBar
    }
    @media not screen and (min-width: 768px){  // width < 768
        margin: 30px auto 0px auto;
        padding: 10px;
    }

    display: flex;
    flex-direction: column;

    max-width: 1200px;

    h2 {
        margin-bottom: 20px;
        font-family: SarabunRegular;
        font-weight: normal;
    }

    h3 {
        margin-bottom: 20px;
        font-family: SarabunRegular;
        font-weight: normal;
    }
    
}

.container {

    margin:  30px auto 0px auto;

    display: flex;
    flex-direction: column;

    max-width: 1200px;
    

    h2 {
        margin-bottom: 20px;
    }

    h3 {
        font-family: SarabunRegular;
        font-size: 18px;
        font-style: normal;
        font-weight: normal;
        line-height: 23px;
        margin-bottom: 10px;
    }
    
}


.row {
    display: flex;
    flex-direction: row;
    margin:  10px auto 10px auto;
    padding: 10px;

    p {
        margin: auto 10px auto 0px;
    }
}

@mixin conditionalFlexing {

    // Ensure the component isn't squeezed before wrapping

    @media screen and (min-width: 768px){
        flex-direction: row;
    }
    @media screen and (max-width: 767px){
        flex-direction: column;
    }
}

@mixin conditionalWidth {

    // Fix component size when screen is large otherwise 100%

    @media screen and (min-width: 768px){
        width: 450px;
    }
    @media screen and (max-width: 767px){
        width: 100%;
    }
}

@mixin conditionalPadding {

    // Different padding when there are 2 columns

    @media screen and (min-width: 768px){  // width >= 768
        padding: 0px 85px;
    }
    @media not screen and (min-width: 768px){  // width < 768
        padding: 15px;
    }
}

.flexWrapper{
    @include conditionalFlexing();

    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
}


@mixin InputDisabled {

    // grey out disabled input field

    input:disabled{
        border-radius: 5px;
        border-color:  #E9E9E9;
        background-color: #E9E9E9;
    }

}

.loginCredentials {
    @include conditionalWidth;

    flex: 1;

    padding: 30px 35px;
    border: 1px solid #009473;
    border-radius: 5px;

    @include InputDisabled

}

.userInfo {
    @include conditionalPadding();
    
    flex: 2;

    // Override default behavior
    
    div { // Reason: Does not align with button
        margin: 0;
    }

    @include InputDisabled;
}

.greenButton{
    margin-top: 20px;
    width: 123px;
height: 36px;
    color:white;

    border: none;
    background: #009473;
box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
border-radius: 4px;
}


.selectBox {
    position: relative;
    display: block;
    width: 150px;
    font-size: 14px;
    color: black;
    border: 0.5px solid #009473;
    border-radius: 5px;
    padding: 6px;
}

.selectBoxCurrent {
    position: relative;
    box-shadow: 0 15px 30px -10px rgba(0, 0, 0, 0.1);
    cursor: pointer;
    outline: none;
}

.selectBoxCurrent:focus + .selectBoxList {
    opacity: 1;
    -webkit-animation-name: none;
            animation-name: none;
}

.selectBoxCurrent:focus + .selectBoxList .selectBoxOption {
    cursor: pointer;
}

.selectBoxCurrent:focus .select-box__icon {
    -webkit-transform: translateY(-50%) rotate(180deg);
    transform: translateY(-50%) rotate(180deg);
}

.select-box__icon {
    position: absolute;
    top: 50%;
    right: 15px;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 20px;
    opacity: 0.3;
    transition: 0.2s ease;
}

.selectBoxValue {
    display: flex;
}

.selectBoxValue svg {
    position: absolute;
    left: 115px;
    top: 10px;
    width: 11px;
    height: 11px;
}

.selectBoxInput {
    display: none;
}

.selectBoxInput:checked + .selectBoxInputText {
    display: block;
}

.selectBoxInputText {
    display: none;
    width: 100px;
    margin: 10px;
    padding: 7px 15px;
    border-radius: 5px;
}

.comboBoxStatusGreen {
    background-color: #21B54D;
}

.comboBoxStatusRed {
    background-color: #CF3C3C;
}

.selectBoxList {
    margin: 0;
    position: absolute;
    width: 100%;
    padding: 0;
    list-style: none;
    opacity: 0;
    -webkit-animation-name: HideList;
            animation-name: HideList;
    -webkit-animation-duration: 0.5s;
            animation-duration: 0.5s;
    -webkit-animation-delay: 0.5s;
            animation-delay: 0.5s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;
    -webkit-animation-timing-function: step-start;
            animation-timing-function: step-start;
    box-shadow: 0 15px 30px -10px rgba(0, 0, 0, 0.1);

    li {
        background-color: #EDEDED;
        padding: 5px;
    }
}

.selectBoxOption {
    display: block;
    padding: 10px 15px;
    border-radius: 5px;
}

.selectBoxOption:hover, .selectBoxOption:focus {
    color: #546c84;
    background-color: #fbfbfb;
}